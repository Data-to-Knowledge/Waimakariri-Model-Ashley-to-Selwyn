# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# arcgis_load_example.py
# Created on: 2017-01-09 12:44:16.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy


# Local variables:
min_flow_sites_otop = "min_flow_sites_otop"
min_flow_sites_otop__2_ = min_flow_sites_otop
MFE_rivers = "MFE_rivers"
min_gauge_sites_otop = "min_gauge_sites_otop"
otop_recorders_v02 = "otop_recorders_v02"
min_gauge_sites_otop_Merge = "C:\\Users\\MichaelEK\\Documents\\ArcGIS\\Default.gdb\\min_gauge_sites_otop_Merge"
site_vert = "site_vert"
MFE_rivers_split = "MFE_rivers_split"
site_vert_join_shp = "C:\\ecan\\local\\Projects\\otop\\GIS\\vector\\min_flow\\site_vert_join.shp"
site_vert_join = "site_vert_join"
site_stream_seg_csv = "C:\\ecan\\local\\Projects\\otop\\GIS\\vector\\min_flow\\results\\site_stream_seg.csv"
catch1__2_ = "catch1"
sites_bound = "sites_bound"
catch_sites_join_shp = "C:\\ecan\\local\\Projects\\otop\\GIS\\vector\\min_flow\\catch_sites_join.shp"
catch1 = "catch1"
sites = "sites"
vcsn_grid_otop = "vcsn_grid_otop"
vcsn_otop_csv = "C:\\ecan\\local\\Projects\\otop\\GIS\\tables\\vcsn_otop.csv"
linz_8m_dem = "linz_8m_dem"
cwms_zones = "cwms_zones"
dem_loc_tif = "C:\\ecan\\local\\Projects\\Waimakariri\\GIS\\raster\\dem_loc.tif"

# Process: Near
arcpy.Near_analysis(min_flow_sites_otop, "MFE_rivers", "300 Meters", "LOCATION", "NO_ANGLE", "PLANAR")

# Process: Merge
arcpy.Merge_management("min_gauge_sites_otop;otop_recorders_v02", min_gauge_sites_otop_Merge, "ReferenceN \"ReferenceN\" true true false 12 Text 0 0 ,First,#,min_gauge_sites_otop,ReferenceN,-1,-1;SITENUMBER \"SITENUMBER\" true true false 10 Long 0 10 ,First,#,otop_recorders_v02,SITENUMBER,-1,-1")

# Process: Spatial Join
arcpy.SpatialJoin_analysis(site_vert, MFE_rivers_split, site_vert_join_shp, "JOIN_ONE_TO_MANY", "KEEP_ALL", "site \"site\" true true false 10 Long 0 10 ,First,#,site_vert,site,-1,-1;num \"num\" true true false 5 Short 0 5 ,First,#,MFE_rivers_split,num,-1,-1;len \"len\" true true false 10 Long 0 10 ,First,#,MFE_rivers_split,len,-1,-1", "WITHIN_A_DISTANCE", "1 Meters", "")

# Process: Export Feature Attribute to ASCII
arcpy.ExportXYv_stats(site_vert_join, "site;num;len", "COMMA", site_stream_seg_csv, "ADD_FIELD_NAMES")

# Process: Spatial Join (2)
arcpy.SpatialJoin_analysis(catch1__2_, sites_bound, catch_sites_join_shp, "JOIN_ONE_TO_MANY", "KEEP_ALL", "GRIDCODE \"GRIDCODE\" true true false 10 Long 0 10 ,First,#,catch1,GRIDCODE,-1,-1;site \"site\" true true false 10 Long 0 10 ,First,#,sites_bound,site,-1,-1", "WITHIN_A_DISTANCE", "30 Meters", "")

# Process: Export Feature Attribute to ASCII (2)
arcpy.ExportXYv_stats(vcsn_grid_otop, "Network;Data_VCN_s;Data_VCN_1;Data_VCN_2;Hydrologic;Catchmen_1;OldHydrolo;catch_num", "COMMA", vcsn_otop_csv, "ADD_FIELD_NAMES")

# Process: Clip
arcpy.Clip_management(linz_8m_dem, "1323813.1799 5004764.9257 1688157.0305 5360238.95", dem_loc_tif, cwms_zones, "", "ClippingGeometry", "NO_MAINTAIN_EXTENT")

